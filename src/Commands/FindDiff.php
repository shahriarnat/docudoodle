<?php

namespace Docudoodle\Commands;

use Illuminate\Console\Command;
use Docudoodle\Docudoodle;

class FindDiff extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'docudoodle:diff
                            {--output= : Output directory for documentation (default: from config or "documentation")}
                            {--cache-path= : Path to the cache file}
                            {--update-hash= : (true|false) update the hash in the cache file after finding differences}
    ';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Find differences between two documentation sets generated by Docudoodle.';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $outputDir = $this->option('output');
        if (empty($outputDir)) {
            $outputDir = config('docudoodle.output_dir', 'documentation');
        }

        $cachePath = $this->option('cache-path');
        if (empty($cachePath)) {
            $cachePath = config('docudoodle.cache_file_path', '.docudoodle_cache.json');
        }

        $updateCache = (bool)$this->option('update-hash');
        if (!empty($updateCache) || $updateCache == 'true') {
            $updateCache = true;
        }

        if (!file_exists("{$outputDir}/{$cachePath}")) {
            $this->error("{$outputDir}/{$cachePath} Cache file not found. Please generate documentation first using the docudoodle:generate command.");
            return 1;
        }

        $this->alert('Finding differences in documentation...');
        $caches = json_decode(file_get_contents("{$outputDir}/{$cachePath}"), true);

        foreach ($caches as $fileAddress => $hash) {

            if (!str_contains($fileAddress, '.php')) {
                continue;
            }

            if (hash_file('sha1', $fileAddress) != $hash) {
                if ($updateCache) {
                    $caches[$fileAddress] = $caches[$fileAddress] . '_updated';
                    $this->line("Updated hash for file: <info>{$fileAddress}</info>");
                } else {
                    $this->line("Difference found in file: <info>{$fileAddress}</info>");
                }
            }

        }

        file_put_contents("{$outputDir}/{$cachePath}", json_encode($caches, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES));
        $this->alert('Difference check completed.');
    }
}
